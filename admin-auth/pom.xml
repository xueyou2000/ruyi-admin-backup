<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>admin-auth</artifactId>
    <name>admin-auth【认证模块】</name>

    <parent>
        <artifactId>xueyou-admin</artifactId>
        <groupId>com.xueyou.admin</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--验证码 -->
        <dependency>
            <groupId>com.github.anji-plus</groupId>
            <artifactId>captcha-spring-boot-starter</artifactId>
        </dependency>

        <!--系统模块 -->
        <dependency>
            <groupId>com.xueyou.admin</groupId>
            <artifactId>admin-system</artifactId>
        </dependency>

        <!--定时任务 -->
        <dependency>
            <groupId>com.xueyou.admin</groupId>
            <artifactId>admin-job</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.parent.artifactId}</finalName>

        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>3.0.0</version>
            </extension>
        </extensions>

        <plugins>
            <!--跳过单元测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!--跳过deploy到私服-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!--  支持本地JAR打包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>2.0.2</version>
                <executions>
                    <execution>
                        <id>upload</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload-single</goal>
                            <goal>sshexec</goal>
                        </goals>
                        <configuration>
                            <serverId>local26</serverId>
                            <fromFile>target/${project.build.finalName}.jar</fromFile>
                            <url>scp://${wagon.deploy.ip}/home/servers/${project.build.finalName}</url>
                            <commands>
                                <command>cp /home/servers/${project.build.finalName}/${project.build.finalName}.jar /home/servers/${project.build.finalName}/backup/${project.build.finalName}${maven.build.timestamp}.jar</command>
                                <command>docker restart ${project.build.finalName}</command>
                            </commands>
                            <!-- 是否显示Shell命令 -->
                            <displayCommandOutputs>true</displayCommandOutputs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>