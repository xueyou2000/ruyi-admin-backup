<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xueyou.admin.system.mapper.UserMapper">

    <resultMap type="com.xueyou.admin.system.domain.User" id="SysUserResult">
        <id property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="loginName" column="login_name"/>
        <result property="userName" column="user_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="admin" column="admin"/>
        <association property="dept" column="dept_id" javaType="com.xueyou.admin.system.domain.Dept" resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
        <collection property="roleIds" javaType="java.util.List" resultMap="RoleIdsResult"/>
    </resultMap>

    <resultMap id="deptResult" type="com.xueyou.admin.system.domain.Dept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="status" column="dept_status"/>
        <result property="ancestors" column="ancestors"/>
    </resultMap>

    <resultMap id="RoleResult" type="com.xueyou.admin.system.domain.Role">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <resultMap id="RoleIdsResult" type="Long">
        <id property="roleId" column="role_id"/>
    </resultMap>

    <sql id="selectUserVo">
        select u.user_id,
               u.dept_id,
               u.login_name,
               u.user_name,
               u.email,
               u.phonenumber,
               u.sex,
               u.avatar,
               u.password,
               u.salt,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_time,
               u.remark,
               u.admin,
               d.dept_id,
               d.parent_id,
               d.dept_name,
               d.order_num,
               d.ancestors,
               d.status as dept_status,
               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.data_scope,
               r.status as role_status
        from sys_user u
                 left join sys_dept d on u.dept_id = d.dept_id
                 left join sys_user_role ur on u.user_id = ur.user_id
                 left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserByPage" parameterType="com.xueyou.admin.system.domain.User" resultType="com.xueyou.admin.system.domain.User">
        select u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.phonenumber, u.password, u.sex, u.avatar, u.salt,
        u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name ,null as role_id
        from sys_user u
        left join sys_dept d on u.dept_id = d.dept_id
        where u.del_flag = '0'
        <if test="user.loginName != null and user.loginName != ''">
            AND u.login_name like concat('%', #{user.loginName}, '%')
        </if>
        <if test="user.status != null and user.status != ''">
            AND u.status = #{user.status}
        </if>
        <if test="user.phonenumber != null and user.phonenumber != ''">
            AND u.phonenumber like concat('%', #{user.phonenumber}, '%')
        </if>
        <if test="user.deptId != null and user.deptId != 0">
            AND (u.dept_id = #{user.deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{user.deptId},ancestors) ))
        </if>
        <!-- 数据范围过滤 -->
        ${user.params.dataScope}
        order by u.create_time
    </select>

    <select id="selectUserByLoginName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.login_name = #{userName}
    </select>

    <select id="selectUserByPhoneNumber" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.phonenumber = #{phonenumber}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.email = #{email}
    </select>

    <select id="selectUserById" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>

</mapper>